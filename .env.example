# Cipher Environment Configuration - Docker Ready
# Copy this file to .env and add your API keys
# This configuration is tested and ready to use out of the box

# ====================
# REQUIRED: API Keys
# ====================

# Gemini API Key (for embeddings - REQUIRED)
# Get it here: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# LLM Provider (choose ONE):

# Option 1: Groq (RECOMMENDED - fast, inexpensive, generous free tier)
# Model: openai/gpt-oss-120b (OpenAI's open-source model)
# Get key here: https://console.groq.com/keys
OPENAI_API_KEY=your-groq-api-key-here
OPENAI_BASE_URL=https://api.groq.com/openai/v1

# Option 2: OpenAI (alternative - paid, slightly more expensive)
# Model: gpt-4o-mini or gpt-4o
# OPENAI_API_KEY=your-openai-api-key-here
# OPENAI_BASE_URL=https://api.openai.com/v1

# ====================
# Project Configuration
# ====================
PROJECT_PATH=~/DevProj

# ====================
# MCP Server Mode
# ====================
MCP_SERVER_MODE=default
USE_ASK_CIPHER=true

# ====================
# Database Configuration (Docker services)
# ====================
# These passwords are safe for local use - services not exposed outside Docker network

# Neo4j Knowledge Graph (cipher-neo4j)
NEO4J_USER=neo4j
NEO4J_PASSWORD=strongpassword
KNOWLEDGE_GRAPH_ENABLED=true
KNOWLEDGE_GRAPH_TYPE=neo4j
KNOWLEDGE_GRAPH_HOST=cipher-neo4j
KNOWLEDGE_GRAPH_PORT=7687
KNOWLEDGE_GRAPH_USERNAME=${NEO4J_USER}
KNOWLEDGE_GRAPH_PASSWORD=${NEO4J_PASSWORD}

# Qdrant Vector Store (cipher-qdrant)
SEARCH_MEMORY_TYPE=both
VECTOR_STORE_TYPE=qdrant
VECTOR_STORE_HOST=cipher-qdrant
VECTOR_STORE_PORT=6333
VECTOR_STORE_URL=http://cipher-qdrant:6333
VECTOR_STORE_COLLECTION=cipher_memory
VECTOR_STORE_DIMENSION=3072
VECTOR_STORE_DISTANCE=Cosine

# Reflection store (reasoning memory)
REFLECTION_VECTOR_STORE_COLLECTION=reflection_memory
DISABLE_REFLECTION_MEMORY=false

# PostgreSQL Session Storage (cipher-postgres)
POSTGRES_DB=cipherdb
POSTGRES_USER=cipheruser
POSTGRES_PASSWORD=cipherpass
CIPHER_PG_URL=postgresql://cipheruser:cipherpass@cipher-postgres:5432/cipherdb
STORAGE_DATABASE_TYPE=postgres
STORAGE_DATABASE_NAME=cipher-sessions.db
STORAGE_DATABASE_PATH=./data

# ====================
# Performance & Features
# ====================
EVENT_PERSISTENCE_ENABLED=true
EVENT_PERSISTENCE_PATH=./data/events
ENABLE_QUERY_REFINEMENT=true
ENABLE_LAZY_LOADING=true

# ====================
# Logging
# ====================
CIPHER_LOG_LEVEL=info
REDACT_SECRETS=true

# ====================
# Docker Configuration
# ====================
# Match your host user ID for proper file permissions
# Linux/Mac: Run `id -u` (for UID) and `id -g` (for GID)
# Windows WSL: Usually 1000/1000
UID=1000
GID=1001